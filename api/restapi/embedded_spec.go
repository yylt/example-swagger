// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "example",
    "title": "example",
    "version": "1.0.0"
  },
  "basePath": "/api/v1",
  "paths": {
    "/echo": {
      "get": {
        "description": "echo name",
        "summary": "echo name",
        "responses": {
          "200": {
            "$ref": "#/definitions/GenericResp"
          },
          "400": {
            "$ref": "#/definitions/GenericResp"
          }
        }
      },
      "post": {
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Item"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/definitions/GenericResp"
          },
          "400": {
            "$ref": "#/definitions/GenericResp"
          }
        }
      }
    },
    "/echo/{name}": {
      "get": {
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int64",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "default": 10,
            "name": "pagesize",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/definitions/GenericResp"
          },
          "400": {
            "$ref": "#/definitions/GenericResp"
          }
        }
      },
      "post": {
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Item"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/definitions/GenericResp"
          },
          "400": {
            "$ref": "#/definitions/GenericResp"
          }
        }
      }
    }
  },
  "definitions": {
    "Foo": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "isadmin": {
          "type": "boolean"
        },
        "labels": {
          "$ref": "#/definitions/Labels"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "description": "负载类型",
          "type": "string",
          "enum": [
            "Deployment",
            "DaemonSet",
            "StatefulSet"
          ]
        }
      }
    },
    "GenericResp": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "data": {
          "type": "object"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "Item": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "Labels": {
      "type": "object",
      "additionalProperties": {
        "type": "string"
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "example",
    "title": "example",
    "version": "1.0.0"
  },
  "basePath": "/api/v1",
  "paths": {
    "/echo": {
      "get": {
        "description": "echo name",
        "summary": "echo name",
        "responses": {
          "200": {},
          "400": {}
        }
      },
      "post": {
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Item"
            }
          }
        ],
        "responses": {
          "200": {},
          "400": {}
        }
      }
    },
    "/echo/{name}": {
      "get": {
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int64",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "default": 10,
            "name": "pagesize",
            "in": "query"
          }
        ],
        "responses": {
          "200": {},
          "400": {}
        }
      },
      "post": {
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Item"
            }
          }
        ],
        "responses": {
          "200": {},
          "400": {}
        }
      }
    }
  },
  "definitions": {
    "Foo": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "isadmin": {
          "type": "boolean"
        },
        "labels": {
          "$ref": "#/definitions/Labels"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "description": "负载类型",
          "type": "string",
          "enum": [
            "Deployment",
            "DaemonSet",
            "StatefulSet"
          ]
        }
      }
    },
    "GenericResp": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "data": {
          "type": "object"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "Item": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "Labels": {
      "type": "object",
      "additionalProperties": {
        "type": "string"
      }
    }
  }
}`))
}
